# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{config, lib, modulesPath, ...}: let
  cryptswap_name = "swap";
in{
  imports = [(modulesPath + "/installer/scan/not-detected.nix")];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "uas" "sd_mod" ];
  boot.initrd.kernelModules = [];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [];
  boot.kernelParams = [
    "resume=/dev/mapper/swap"
    "i915.enable_guc=2"
    "i915.mitigations=off"
    "mitigations=off"
    "bgrt_disable"
    # "quiet"
  ];

  fileSystems."/" =
    { device = "zroot/default";
      fsType = "zfs";
    };

  fileSystems."/home" =
    { device = "zroot/home";
      fsType = "zfs";
    };

  fileSystems."/nix" =
    { device = "zroot/nix";
      fsType = "zfs";
    };

  fileSystems."/var/lib" =
    { device = "zroot/lib";
      fsType = "zfs";
    };

  fileSystems."/root" =
    { device = "zroot/home/root";
      fsType = "zfs";
    };

  fileSystems."/var/log" =
    { device = "zroot/log";
      fsType = "zfs";
    };

  fileSystems."/persistent" =
  { device = "zroot/persistent";
    fsType = "zfs";
  };

  fileSystems."/boot" =
    { device = "/dev/disk/by-partlabel/EFI\\x20system\\x20partition";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  boot.initrd.luks.devices."${cryptswap_name}".device = "/dev/disk/by-partlabel/swap\\x20partition";

  swapDevices =
    [ { device = "/dev/mapper/swap"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
